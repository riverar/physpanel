// Bindings generated by `windows-bindgen` 0.64.0

#![allow(
    non_snake_case,
    non_upper_case_globals,
    non_camel_case_types,
    dead_code,
    clippy::all
)]

#[inline]
pub unsafe fn RtlPublishWnfStateData(
    statename: WNF_STATE_NAME,
    typeid: Option<*const WNF_TYPE_ID>,
    buffer: Option<*const core::ffi::c_void>,
    length: Option<u32>,
    explicitscope: Option<*const core::ffi::c_void>,
) -> windows::Win32::Foundation::NTSTATUS {
    windows_core::link!("ntdll.dll" "system" fn RtlPublishWnfStateData(statename : WNF_STATE_NAME, typeid : *const WNF_TYPE_ID, buffer : *const core::ffi::c_void, length : u32, explicitscope : *const core::ffi::c_void) -> windows::Win32::Foundation:: NTSTATUS);
    unsafe {
        RtlPublishWnfStateData(
            core::mem::transmute(statename),
            typeid.unwrap_or(core::mem::zeroed()) as _,
            buffer.unwrap_or(core::mem::zeroed()) as _,
            length.unwrap_or(core::mem::zeroed()) as _,
            explicitscope.unwrap_or(core::mem::zeroed()) as _,
        )
    }
}
#[inline]
pub unsafe fn RtlQueryWnfStateData(
    changestamp: *mut u32,
    statename: WNF_STATE_NAME,
    callback: PWNF_USER_CALLBACK,
    callbackcontext: Option<*const core::ffi::c_void>,
    typeid: Option<*const WNF_TYPE_ID>,
) -> windows::Win32::Foundation::NTSTATUS {
    windows_core::link!("ntdll.dll" "system" fn RtlQueryWnfStateData(changestamp : *mut u32, statename : WNF_STATE_NAME, callback : PWNF_USER_CALLBACK, callbackcontext : *const core::ffi::c_void, typeid : *const WNF_TYPE_ID) -> windows::Win32::Foundation:: NTSTATUS);
    unsafe {
        RtlQueryWnfStateData(
            changestamp as _,
            core::mem::transmute(statename),
            callback,
            callbackcontext.unwrap_or(core::mem::zeroed()) as _,
            typeid.unwrap_or(core::mem::zeroed()) as _,
        )
    }
}
pub type PWNF_USER_CALLBACK = Option<
    unsafe extern "system" fn(
        statename: WNF_STATE_NAME,
        changestamp: u32,
        typeid: *const WNF_TYPE_ID,
        callbackcontext: *const core::ffi::c_void,
        buffer: *const core::ffi::c_void,
        length: u32,
    ) -> windows::Win32::Foundation::NTSTATUS,
>;
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct WNF_STATE_NAME {
    pub Data: [u32; 2],
}
impl Default for WNF_STATE_NAME {
    fn default() -> Self {
        unsafe { core::mem::zeroed() }
    }
}
#[repr(C)]
#[derive(Clone, Copy, Debug, Default, PartialEq)]
pub struct WNF_TYPE_ID {
    pub TypeId: windows_core::GUID,
}
